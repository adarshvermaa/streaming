name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check and Install Docker
        run: |
          if ! command -v docker &> /dev/null; then
            echo "Docker not found. Installing..."
            sudo apt-get update
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            sudo apt-get update
            sudo apt-get install -y docker-ce
            sudo usermod -aG docker ${USER}
            sudo systemctl enable docker
            sudo systemctl start docker
          else
            echo "Docker is already installed."
          fi

      - name: Check and Install Docker Compose
        run: |
          if ! command -v docker-compose &> /dev/null; then
            echo "Docker Compose not found. Installing..."
            sudo snap install docker || sudo apt install docker-compose -y
          else
            echo "Docker Compose is already installed."
          fi

      - name: Save SSH Key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > streamingAwsKey.pem
          chmod 600 streamingAwsKey.pem

      - name: Add EC2 to known hosts
        run: ssh -i streamingAwsKey.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} "echo Connected"

      - name: Copy Project Files to EC2
        run: |
          rsync -avz -e "ssh -i streamingAwsKey.pem -o StrictHostKeyChecking=no" --exclude=".git" --exclude="node_modules" --exclude="dist" ./ ubuntu@${{ secrets.AWS_EC2_HOST }}:/home/ubuntu/app

      - name: Deploy to EC2
        run: |
          ssh -i "streamingAwsKey.pem" -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} << 'EOF'
          cd /home/ubuntu/app/server

          # Ensure docker-compose.yml exists
          if [ ! -f "docker-compose.yml" ]; then
            echo "❌ Error: docker-compose.yml not found in /home/ubuntu/app"
            exit 1
          fi

          # Ensure Node.js & npm are installed
          if ! command -v node &> /dev/null; then
            curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi

          # Ensure npm is available
          export PATH=$PATH:/usr/local/bin

          # Install PM2 globally if not installed
          if ! command -v pm2 &> /dev/null; then
            sudo npm install -g pm2
          fi

            npm install

          if ! tsc -v &> /dev/null; then
            sudo npm install -g typescript
          fi

          # Stop old PM2 process if exists
          sudo  pm2 stop all || true

          sudo npm run start:server

          EOF
