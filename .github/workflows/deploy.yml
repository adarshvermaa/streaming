name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Save SSH Key
        run: echo "${{ secrets.AWS_PRIVATE_KEY }}" > streamingAwsKey.pem && chmod 600 streamingAwsKey.pem

      - name: Copy Project Files to EC2
        run: |
          scp -i "streamingAwsKey.pem" -o StrictHostKeyChecking=no -r . ubuntu@${{ secrets.AWS_EC2_HOST }}:/home/ubuntu/app

      - name: Deploy to EC2
        run: |
          ssh -i "streamingAwsKey.pem" -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} << 'EOF'

          # Go to the app directory
          cd /home/ubuntu/app/server || { echo "❌ Error: Directory not found!"; exit 1; }

          # Ensure docker-compose.yml exists
          if [ ! -f "docker-compose.yml" ]; then
            echo "❌ Error: docker-compose.yml not found!"
            exit 1
          fi

          # Install Node.js & npm if missing
          if ! command -v node &> /dev/null; then
            curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi

          # Install Docker if missing
          if ! command -v docker &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl enable docker
            sudo systemctl start docker
          fi

          # Install latest Docker Compose
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          # Ensure user has permission to run Docker
          sudo usermod -aG docker ubuntu

          # Stop and remove old containers
          docker-compose down

          # Build and start new containers
          docker-compose up --build -d

          # Check if the container is running
          if ! docker ps | grep -q "server-container"; then
            echo "❌ Error: server-container failed to start"
            exit 1
          fi

          echo "✅ Deployment successful!"
          EOF
