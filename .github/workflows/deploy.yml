name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Save SSH Key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > streamingAwsKey.pem
          chmod 600 streamingAwsKey.pem

      - name: Add EC2 to known hosts
        run: |
            ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} "echo Connected"
        
      - name: Copy Project Files to EC2
        run: |
            rsync -avz -e "ssh -i streamingAwsKey.pem -o StrictHostKeyChecking=no" --exclude=".git" --exclude="node_modules" --exclude="dist" ./ ubuntu@${{ secrets.AWS_EC2_HOST }}:/home/ubuntu/app
        
      - name: Deploy to EC2
        run: |
          ssh -i "streamingAwsKey.pem" -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} << 'EOF'
          cd /home/ubuntu/app/server

          # Ensure docker-compose.yml exists
          if [ ! -f "docker-compose.yml" ]; then
            echo "❌ Error: docker-compose.yml not found in /home/ubuntu/app"
            exit 1
          fi

          # Ensure Node.js & npm are installed
          if ! command -v node &> /dev/null; then
            curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi

          # Ensure npm is available
          export PATH=$PATH:/usr/local/bin

          # Install PM2 globally if not installed
          if ! command -v pm2 &> /dev/null; then
            sudo npm install -g pm2
          fi

          # Install Docker Compose if missing
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          # Stop old PM2 process if exists
          pm2 stop all || true

          # Stop and remove old containers
          docker-compose down

          # Build and start new containers
          docker-compose up --build -d

          # Start the Node.js app with PM2 inside the container
          docker exec server-container pm2 start npm --name "server" -- run start
          docker exec server-container pm2 save
          docker exec server-container pm2 startup
          EOF
